---
import type { DependencyType } from "../npm";
import Badge from "./Badge";
import DetailCardSection from "./DetailCardSection.astro";

import dotsSvg from "./dots.svg?raw";
import npmLogo from "./npmlogo.svg?raw";

const dots = `url('data:image/svg+xml;base64, ${btoa(dotsSvg)}');`;
interface Props {
    title: string;
    tag: DependencyType;
    description: string;
    sections: {
        title: string;
        subtitle: string;
    }[];
}

const { title, tag, description, sections } = Astro.props;
---

<section class="bg-white mx-auto max-w-screen-xl pt-8 xl:rounded-t-3xl">
    <div
        class="text-focus-in dots mx-4 lg:mx-8 px-4 py-4 md:py-12 sm:px-6 md:py-16 lg:px-8 drop-shadow-xl bg-white rounded-2xl border-2 border-indigo-500"
    >
        <div class="mx-auto max-w-3xl text-center">
            <h2
                class="flex gap-x-2 items-center justify-center text-xl font-bold text-gray-900 md:text-3xl"
            >
                {title}
                <Badge type={tag} />
                <a
                    class="underline underline-offset-2 decoration-rose-500 decoration-2 hover:text-rose-500 hover:scale-125"
                    href={`https://www.npmjs.com/package/${title}`}
                    target="_blank"
                    rel="noreferrer noopener"
                >
                    <img
                        class="h-4"
                        src={`data:image/svg+xml;base64, ${btoa(npmLogo)}`}
                        alt="npm logo"
                    /></a
                >
            </h2>

            <p class="mt-4 text-gray-500 sm:text-xl">
                {description}
            </p>
        </div>

        <div class="mt-8 sm:mt-12">
            <dl class="grid grid-cols-1 gap-4 sm:grid-cols-3">
                {sections.map(section => <DetailCardSection {...section} />)}
            </dl>
        </div>
    </div>
</section>

<style define:vars={{ dots }}>
    .dots {
        background-image: var(--dots);
        background-repeat: repeat;
    }
</style>

<style>
    .text-focus-in {
        animation: text-focus-in 0.5s cubic-bezier(0.55, 0.085, 0.68, 0.53) both;
    }
    /* ----------------------------------------------
 * Generated by Animista on 2023-10-24 0:10:55
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

    /**
 * ----------------------------------------
 * animation text-focus-in
 * ----------------------------------------
 */
    @keyframes text-focus-in {
        0% {
            filter: blur(12px);
            opacity: 0;
        }
        100% {
            filter: blur(0px);
            opacity: 1;
        }
    }
</style>
